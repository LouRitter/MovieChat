{"version":3,"sources":["movietalk.png","Components/Movie/Movie.jsx","Components/Search/Search.jsx","Components/App/App.jsx","firebaseConfig.js","Components/Comments/Comment.jsx","Components/Comments/Comments.jsx","Components/Chat/Chat.jsx","Components/Navigation/Navigation.jsx","Components/Main/Main.jsx","serviceWorker.js","index.js"],"names":["module","exports","Movie","this","props","Title","imdbID","Poster","Year","Card","style","width","backgroundColor","className","Body","Subtitle","Img","src","alt","to","pathname","state","title","image","year","Button","React","Component","Search","handleSubmit","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","handleSendRequest","setState","handleInputTitle","event","preventDefault","target","value","type","onChange","onClick","App","movies","user","sendRequest","require","request","method","url","qs","page","r","headers","error","response","body","Error","JSON","parse","console","log","bind","Jumbotron","CardColumns","movie","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","db","firestore","Comment","submitReplyHandler","cmnt","comment","userid","displayName","replies","push","submitReply","parent","handleChange","e","handleReplyClick","showReplyBox","comments","Form","onSubmit","Group","controlId","Control","as","replyvalue","placeholder","rows","length","child","key","id","Comments","submitCommentHandler","collection","doc","movieid","add","ref","onAuthStateChanged","get","then","querySnapshot","docs","data","forEach","replyRef","update","Chat","handleToggleClick","plotOutline","genres","ratings","showMore","i","object","Plot","Genre","imdbRating","match","params","shortPlot","text","indexOf","Navigation","show","setShow","handleClose","handleShow","Navbar","Brand","href","height","Toggle","Collapse","Text","Modal","onHide","Header","closeButton","Footer","variant","Main","database","login","logout","signOut","signInWithPopup","result","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.edb35326.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movietalk.05b8fd20.png\";","import React from 'react';\nimport \"./Movie.css\";\nimport {Switch, Link} from \"react-router-dom\"\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nclass Movie extends React.Component {\n   render() {\n       let {Title, imdbID, Poster, Year} = this.props;\n       if (Poster === \"N/A\"){\n            Poster = 'https://via.placeholder.com/300x450'\n        }\n       return (\n\n           <Card style={{ width: '18rem', backgroundColor: '#282c34' }} className=\"movie\">\n               <Card.Body>\n                <div className=\"title-year\">\n                    <Card.Title className=\"title\">{Title}</Card.Title>\n                    <Card.Subtitle className=\"year\">{Year}</Card.Subtitle>\n                </div>\n               </Card.Body>\n\n                   <Card.Img src={Poster} alt=\"my movie poster\"/>\n                   <Link to={{\n                            pathname: `movies/${imdbID}`,\n                            state: {\n                                title: {Title},\n                                imdbID: {imdbID},\n                                image: {Poster}, \n                                year: {Year}\n                            }\n                    }}>\n                        <Button className=\"chatbutton\">\n                            <span>Chat About It</span>\n                        </Button>\n                    </Link>\n           </Card>\n       )\n   }\n}\nexport default Movie;","import React from 'react';\nimport \"./Search.css\";\n\nclass Search extends React.Component {\n   state= {\n       title: ''\n   }\n   handleSubmit = () => {\n       let {title} = this.state;\n        title = title.toLowerCase()\n        .split(' ')\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ');\n       this.props.handleSendRequest(title)\n       this.setState({title: ''})\n   }\n   handleInputTitle = (event) => {\n       event.preventDefault();\n       const title = event.target.value;\n       this.setState({title});\n   }\n   render() {\n       const {title} = this.state;\n       return (\n           <div className=\"search\">\n               <input className=\"search-box\" type=\"text\" onChange={this.handleInputTitle} value={title}/>\n               <input className=\"button\" type=\"submit\" onClick={this.handleSubmit} value=\"Search\"/>\n           </div>\n       )\n   }\n}\nexport default Search;","import React from 'react';\nimport './App.css';\nimport unirest from 'unirest';\nimport Movie from \"../Movie/Movie.jsx\";\nimport Search from \"../Search/Search.jsx\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\n\nclass App extends React.Component {\n\n  state = {\n     movies: [],\n     user: null \n }\n sendRequest = (title) => {\n\n  var request = require(\"request\");\n  var options = {\n    method: 'GET',\n    url: 'https://movie-database-imdb-alternative.p.rapidapi.com/',\n    qs: {page: '1', r: 'json', s: title},\n    headers: {\n      'x-rapidapi-host': 'movie-database-imdb-alternative.p.rapidapi.com',\n      'x-rapidapi-key': 'GJnF3zwATmmshyz03tiXO7Rg13v6p1RDW2bjsnKV4XqoYfWoRj'\n    }\n  };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    const object = JSON.parse(body);\n    const movies = object.Search;\n    console.log(movies);\n\n    this.setState({movies});\n  }.bind(this)); \n }\n render() {\n\n   return (\n\n     <div className=\"App\">\n   \n       <Jumbotron className=\"App-header\">\n      <h1>Search For A Movie</h1>\n      <Search handleSendRequest={this.sendRequest}/>\n\n\n       </Jumbotron>\n       <CardColumns>\n       {\n\n        // eslint-disable-next-line array-callback-return\n        this.state.movies.map((movie) => {\n          if(movie.Title && movie.imdbID){\n            return <Movie {...movie}/>\n          }\n        })\n        }\n\n        </CardColumns>\n     </div>\n     \n   );\n   \n }\n}\nexport default App;","import firebase from 'firebase'\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyA_OSfiTXh5e4Jj2ctJtn0Pu6bIkORDxsQ\",\n    authDomain: \"moviechat-240e5.firebaseapp.com\",\n    databaseURL: \"https://moviechat-240e5.firebaseio.com\",\n    projectId: \"moviechat-240e5\",\n    storageBucket: \"moviechat-240e5.appspot.com\",\n    messagingSenderId: \"981629435123\",\n    appId: \"1:981629435123:web:f5b305a052801b052b0b86\",\n    measurementId: \"G-THG0THWT0V\"\n  };\n  \n  \n\n    \n  firebase.initializeApp(config);\n\n\n  export const provider = new firebase.auth.GoogleAuthProvider();\n  export const auth = firebase.auth();\n  export const db = firebase.firestore();\n  export default firebase;\n","import React from 'react';\nimport \"./Comments.css\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nclass Comment extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n          user: null,\n          comments: [],  \n          showReplyBox: false,\n        }\n\n    }\n    submitReplyHandler = (event) => {\n        event.preventDefault();\n        const cmnt = {\n          \n        };\n        \n        cmnt.comment = this.state.comment;\n        cmnt.userid = this.props.user.displayName;\n        cmnt.replies =  [];\n        \n        this.props.comment.replies.push(cmnt);\n        console.log(this.props.comment);\n        this.props.submitReply(this.props.parent);\n        // this.props.db.collection(\"MovieComments\")\n        // .doc(this.props.movieid)\n        // .collection(\"comments\")\n        // .add(cmnt);\n        // this.forceUpdate();\n\n      }\n  \n      handleChange = e => {\n        this.setState({comment: e.target.value});\n      };\n  \n  \n    handleReplyClick = e => {\n        this.setState({showReplyBox : !this.state.showReplyBox });\n        console.log(this.state.showReplyBox);\n      }\n\n\n\n    render() {\n      var comment = this.props.comment\n      var user = this.props.user\n      var submitReply = this.props.submitReply;\n      var parent = this.props.parent\n      return <div className=\"Comment\">\n                        <div className=\"commentbox\">\n                            <h4> {comment.userid}</h4>\n                            <span >{comment.comment}</span>\n                            <Button className=\"showMoreButton btn-xs\" onClick={this.handleReplyClick}>Reply</Button>\n                            {this.state.showReplyBox ? ( \n                              <Form onSubmit={this.submitReplyHandler}>\n                              <Form.Group controlId=\"commentForm.ControlTextarea1\">\n                                <Form.Control as=\"textarea\" \n                                type=\"text\"\n                                value={this.state.replyvalue}\n                                placeholder=\"Enter text\"\n                                onChange={this.handleChange}\n                                rows=\"1\" />\n                              </Form.Group>\n                                <Button type=\"submit\">Submit</Button>\n                              </Form>\n                            ):(\n                              <div></div>\n                            )}\n                         { comment.replies.length >= 0 && comment.replies.map(function(child) {\n                                return <Comment parent={parent} submitReply={submitReply} user={user} key={child.id} comment={child}/>\n                         })}\n                        </div> \n\n                        </div>\n    }\n  }\n  export default Comment;","import React from 'react';\nimport \"./Comments.css\";\nimport {Switch, Link} from \"react-router-dom\"\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport firebase, { auth, provider, db } from \"../../firebaseConfig.js\"\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Comment from './Comment';\n\nclass Comments extends React.Component {\n  \n    constructor() {\n        super();\n        this.state = {\n          user: null,\n          comments: [],  \n          \n        }\n\n    }\n    componentDidMount() {\n      const ref = db\n      .collection('MovieComments')\n      .doc(this.props.movieid)\n      .collection(\"comments\");\n      this.setState({ref});\n        auth.onAuthStateChanged((user) => {\n          if (user) {\n            this.setState({ user });\n          } \n        });\n        db.collection(\"MovieComments\")\n        .doc(this.props.movieid)\n        .collection(\"comments\")\n        .get()\n        .then(querySnapshot => {\n          console.log(querySnapshot.docs)\n          const comments = querySnapshot.docs.map(doc => doc.data());\n          this.setState({ comments });\n        });\n        \n    }\n\n\n    submitCommentHandler = (event) => {\n      event.preventDefault();\n      const cmnt = {\n        \n      };\n\n      cmnt.comment = this.state.comment;\n      cmnt.userid = this.state.user.displayName;\n      cmnt.replies = [];\n\n      db.collection(\"MovieComments\")\n      .doc(this.props.movieid)\n      .collection(\"comments\")\n      .add(cmnt);\n\n    }\n\n    handleChange = e => {\n      this.setState({comment: e.target.value});\n    };\n\n    submitReply(comment){\n      const replies = comment.replies;\n      console.log(comment)\n      db.collection(\"MovieComments\")\n      .doc(this.props.movieid)\n      .collection(\"comments\")\n      .get()\n      .then(function(querySnapshot) {\n        querySnapshot.forEach(function(doc) {\n            var replyRef = db.collection(\"comments\").doc(doc.id);\n            console.log(replyRef);\n            return replyRef.update({\n                comment: comment\n            });\n        });\n    });\n    }\n\n    render() {\n\n       return (\n         \n\n        \n        <div className=\"Comments\">\n          <div className = \"commentwritebox\">\n            <h3>Discuss The Movie Here</h3>\n            <Form onSubmit={this.submitCommentHandler}>\n            <Form.Group controlId=\"commentForm.ControlTextarea1\">\n              <Form.Control as=\"textarea\" \n               type=\"text\"\n               value={this.state.value}\n               placeholder=\"Enter text\"\n               onChange={this.handleChange}\n               rows=\"3\" />\n            </Form.Group>\n               <Button type=\"submit\">Submit</Button>\n            </Form>\n          </div>\n          <div className=\"commentlistbox\">\n          <h3>Comments</h3>\n                {this.state.user ?\n                \n                    <div>\n                      <div>\n                      {this.state.comments.map(function(comment) {\n                        \n                        return <Comment parent={comment} submitReply={this.submitReply.bind(this) } db={db} movieid={this.props.movieid} user={this.state.user} comment={comment}/>\n                      }.bind(this))}\n                      </div>\n\n\n                    </div>\n                  :\n                  <div>\n                    <h3>Log in to see Comments</h3>\n                  </div>\n                }\n         </div>\n        </div>  \n        \n       )\n   }\n}\nexport default Comments;","import React from 'react';\nimport unirest from 'unirest';\nimport './Chat.css';\nimport Comments from '../Comments/Comments'\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nclass Chat extends React.Component {\n    handleToggleClick = this.handleToggleClick.bind(this);\n    state = {\n        title: \"\",\n        image: \"\",\n        year: \"\",\n        plotOutline:\"\",\n        id: \"\",\n        genres: \"\",\n        ratings: \"\",\n        showMore: true,\n\n    }\n    sendRequest = (imdbID) => {\n        var request = require(\"request\");\n\n        var options = {\n          method: 'GET',\n          url: 'https://movie-database-imdb-alternative.p.rapidapi.com/',\n          qs: {i: imdbID, r: 'json'},\n          headers: {\n            'x-rapidapi-host': 'movie-database-imdb-alternative.p.rapidapi.com',\n            'x-rapidapi-key': 'GJnF3zwATmmshyz03tiXO7Rg13v6p1RDW2bjsnKV4XqoYfWoRj'\n          }\n        };\n        \n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            const object = JSON.parse(body);\n                console.log(object);\n                this.setState({\n                        title: object.Title,\n                        year: object.Year,\n                        image: object.Poster, \n                        plotOutline: object.Plot, \n                        id: object.imdbID,\n                        genres: object.Genre,\n                        ratings: object.imdbRating \n                    });\n     }.bind(this));\n     \n    }\n\n    handleToggleClick() {\n        this.setState(state => ({\n          showMore: !state.showMore\n        }));\n    }\n\n    componentDidMount(){\n        var id = this.props.match.params.id\n\n        console.log(id)\n        this.sendRequest(id);\n    }\n\n    render() {\n        const title = this.state.title;\n        \n        let  shortPlot = \"\";\n\n        if(this.state.plotOutline.text != null && this.state.plotOutline.text.length > 150){\n            shortPlot = this.state.plotOutline.text.substring(0, this.state.plotOutline.text.indexOf(\".\") +1);\n\n        }else{\n            shortPlot = this.state.plotOutline.text;\n        }\n        \n        return (\n            <div className = \"Chat\">\n                <Jumbotron className=\"Jumbo\">\n\n                <div className='row'>\n                <div className=\"imgholder col-md-4\">\n                <img className='poster' src={this.state.image} alt=\"poster\"/>\n                </div>\n                <div className='col-md-8 movietext'>\n                    <div className=\"row titlerow\">\n                    <h1>{title}</h1>\n                    <h3 className=\"movieyear\">({this.state.year})</h3>\n                    </div>\n\n                <div className=\"row plotRow\">\n                {this.state.showMore ? ( \n\n                    <span className='details'>{this.state.plotOutline} \n                    <Button className=\"showMoreButton btn-xs\" onClick={this.handleToggleClick}>Show Less</Button>\n                    </span>\n\n                ) : (\n                    <span className =\"details\" >{shortPlot} \n                    <Button className=\"dots\" onClick={this.handleToggleClick}>Info</Button>\n                    </span>\n                )}\n                </div>\n                <div className=\"row\">\n                    <span className=\"genreList col-md-6\"><b>Genres:</b> {this.state.genres}</span>\n                    <span className=\"genreList col-md-6\"><b>Rating:</b> {this.state.ratings}</span>\n                </div>\n                </div>\n                </div>\n\n                </Jumbotron>\n                <Comments movieid = {this.props.match.params.id}></Comments>\n            </div>\n        );\n\n    }\n  }\n\nexport default Chat;","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport './Navigation.css';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Modal';\n\n\n\n\nclass Navigation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      setShow: false\n    }\n  }\n  \n  \n  render() {\n    // const {\n    //   user,\n    //   signOut,\n    //   signInWithGoogle,\n    // } = this.props;\n\n    \n    const handleClose = () => this.setState({show:false});\n    const handleShow = () => this.setState({show:true});\n     return (\n      <div>\n        <Navbar className=\"navbar\">\n        <Navbar.Brand href=\"/\">\n          <img\n            src={require('../../movietalk.png')} \n            width=\"auto\"\n            height=\"60\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          />\n        </Navbar.Brand>\n        <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n    \n    \n        <Navbar.Text className =\"accounttext\">\n    \n        {this.props.user ?\n          <button className=\"signinout\" onClick={handleShow}>Log Out</button>                \n          :\n          <button className=\"signinout\" onClick={handleShow}>Log In</button>              \n        }\n        </Navbar.Text>\n    \n      </Navbar.Collapse>\n      </Navbar>\n      <Modal show={this.state.show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    </div>\n     )\n     }\n    } export default Navigation; ","import React from 'react';\nimport \"./Main.css\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ReactDOM from 'react-dom';\nimport App from '../App/App.jsx';\nimport Chat from '../Chat/Chat.jsx';\nimport Navigation from '../Navigation/Navigation.jsx'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport firebase, { auth, provider } from \"../../firebaseConfig.js\"\n\nexport const db = firebase.database();\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n          user: null            \n        }\n        this.login = this.login.bind(this); \n        this.logout = this.logout.bind(this); \n    }\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n          if (user) {\n            this.setState({ user });\n          } \n        });\n    }\n\n    handleChange(e) {\n        /* ... */\n      }\n      logout() {\n        auth.signOut()\n        .then(() => {\n          this.setState({\n            user: null\n          });\n        });\n      }\n      login() {\n        auth.signInWithPopup(provider) \n          .then((result) => {\n            const user = result.user;\n            this.setState({\n              user\n            });\n          });\n      }\n   render() {\n        return (\n            \n            <div className=\"bg2\">\n\n            <Navigation user={this.state.user} login = {this.login} logout = {this.logout} >\n            \n            </Navigation>\n            <BrowserRouter>\n            <Switch>\n            <Route exact path=\"/MovieChat\" component={App} />\n            <Route path=\"/movies/:id\" component={Chat} />\n            </Switch>\n\n            </BrowserRouter>\n\n            </div>\n        )\n    }\n}\nexport default Main;\n\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Components/Main/Main.jsx';\nimport Chat from './Components/Chat/Chat.jsx';\nimport Navigation from './Components/Navigation/Navigation.jsx'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n\n\nReactDOM.render((\n  \n  <Main></Main>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}